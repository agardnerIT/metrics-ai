{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Metrics AI Repository Development Environment","text":"<p>This repository is a preconfigured development environment with everything you need preinstalled.</p> <p>You can run this either in a browser (using the free credits GitHub provides) or run it locally (what I recommend).</p> <p>These instructions assume you're using Visual Studio code, but any IDE should be similar.</p> <ol> <li>In VS Code, ensure the <code>Dev Containers</code> extension is installed</li> <li>Make sure Docker is running on your machine</li> <li>Clone this code and open it in VS Code</li> <li>Go to <code>View &gt; Command Palette</code> and choose <code>Dev containers: Reopen in Container</code></li> <li>Wait for the installation process to complete. When it is done, you'll see <code>Done. Press any key to close the terminal.</code></li> </ol> <p>Congratulations, you are now inside a Docker container and this is your self-contained dev environment.</p>"},{"location":"#start-the-app","title":"Start the App","text":"<p>It is now time to start the Prometheus application.</p> <ol> <li>Drop into a Python venv and install the required dependencies</li> </ol> <pre><code>source bin/activate\npip install -r requirements.txt\n</code></pre> <p>Now start the app:</p> <pre><code>fastapi run app.py --host 0.0.0.0 --port 8000\n</code></pre>"},{"location":"#access-the-app","title":"Access the App","text":"<p>The application has two pages. Open both of these pages in two different tabs.</p> <ul> <li><code>/</code> - the root path is the \"application logic\".</li> <li><code>/metrics</code> - this is the page of Prometheus metrics. The collector will \"watch\" this page</li> </ul> <p>Each time you refresh the root page, <code>app_requests_total</code> will increment by <code>1</code>. <code>app_random_number</code> will also be set to a new value between <code>0</code> and <code>100</code>.</p> <p>Refreshing <code>/metrics</code> will show the new values each time you refresh <code>/</code>.</p>"},{"location":"#start-collector","title":"Start Collector","text":"<p>Finally, let's start the collector to see the metrics being retrieved (\"scraped\" in Prometheus parlance).</p> <pre><code>./otelcol-contrib --config=collector-config.yaml\n</code></pre>"}]}